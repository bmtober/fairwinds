== Fairwinds Game Tutorial 2 - Connecting to the Game

This tutorial explains how to connect to the game and run some
privileged informative commands to gather information about the state of
the game using your 'Fairian' account, and explains the various game
elements you will use to interact with and monitor status of game
activities.

As explained in Tutorial 0, you must have the +psql+ client application
available on your computer. The command to connect to the 'Fairwinds'
game specifies the Internet location where the game is hosted, the game
name, and your 'Fairian' name (alice, in this example):

--------------------------------------------
psql -h fairwinds.btober.net fairwinds alice
--------------------------------------------

When you successfully connect to the game, this is the interface you are
presented with:

--------------------------------------------
fairwinds=>
--------------------------------------------


When connected as a valid player, you have a significantly expanded view
into the game showing the relations used to participate in the finance
(+bond+), real estate (+land+), commodity (+food+), labor (+work+), and 
debt (+note+) markets:

--------------------------------------------
fairwinds=# \d
               List of relations
   Schema   |      Name      | Type |  Owner   
------------+----------------+------+----------
 privileged | bond           | view | postgres
 privileged | bond_ask       | view | postgres
 privileged | bond_bid       | view | postgres
 privileged | cash_journal   | view | postgres
 privileged | connection     | view | postgres
 privileged | fairian        | view | postgres
 privileged | fairwinds      | view | postgres
 privileged | food_ask       | view | postgres
 privileged | food_bid       | view | postgres
 privileged | food_journal   | view | postgres
 privileged | health_journal | view | postgres
 privileged | land           | view | postgres
 privileged | land_ask       | view | postgres
 privileged | land_bid       | view | postgres
 privileged | land_journal   | view | postgres
 privileged | note           | view | postgres
 privileged | note_ask       | view | postgres
 privileged | note_bid       | view | postgres
 privileged | skill          | view | postgres
 privileged | skill_journal  | view | postgres
 privileged | work           | view | postgres
 privileged | work_ask       | view | postgres
 privileged | work_bid       | view | postgres
(23 rows)
--------------------------------------------


Generally speaking, you use the 'bid' and 'ask' relations to issue buy
and sell orders, respectively, on the markets. The 'journal' relations
record history of cash transactions, food production and consumption,
changes to 'Fairian' health status, and proficiency at various
+skill+ categories.

The +connection+ relation lists the currently-active players. A SQL
+select+ statement is used to list the data stored in a relation, so to
show a list of currently-active players you could run:


--------------------------------------------
fairwinds=> select * from connection;

 fairian_name |          login_time           
--------------+-------------------------------
alice         | 2014-11-11 18:52:31.487421-05
(1 row)
--------------------------------------------

The "+*+" in this statement denotes "list all columns", so you do not
really have to know the structure of the relation to get a listing of
the data it contains. This listing shows that +alice+ is the only player
connected to the game.

The fairian relation holds the player accounts. A similar SQL
statement is used to produce that list:


--------------------------------------------
fairwinds=> select * from fairian;

 fairian_name | play_level  |   email_address   |        created_date        
--------------+-------------+-------------------+----------------------------
 alice        | privileged  | alice@example.com | 2014-11-11 11:45:10.962067
(1 row)
--------------------------------------------

which shows (no surpize, since this is a tutorial) that +alice+ is the
sole 'Fairian' account currently registered in the game.

The fairwinds relation holds a single row that stores the current time
('i.e.' the current click), a time stamp of when the game began and when
it will end, if specified, the approximate real-world click interval in
seconds, and three values related to the game version. The value of the
click column is usually what you will be most interested in so as to
know how soon scheduled events in the game will occur, such as the
expiration of trade orders or redemption of bonds, for example.  By
specifying the column you want in place of the asterik in a +select+
statement you limit the output to only the information you are
interested in:

--------------------------------------------
fairwinds=> \x
Expanded display is on.

fairwinds=> select click, click_interval from fairwinds;

-[ RECORD 1 ]--+--
click          | 2
click_interval | 20

--------------------------------------------

The example above also demonstrates utilizing the "expanded view"
feature of the +psql+ client software. the +\x+ command toggles expanded
view on and off. 'Off' produces output in the traditional tabular (rows
and columns) output. 'On' is useful for results that have a single
or small number of rows, as it pivots the columnar arrangment and lists
each row in a separate group.

The other relations are briefly described below, but these and others
will get greater attention in subsequent tutorials:

[horizontal] 
*+bond+*:: The +bond+ relation stores a list of, well,
'bonds'. Literally a 'bond' is just that, a promise (as in "my word is
my bond") to re-pay a fixed amount of money at some specified
future time. It represents a contract between two 'Fairians' or
between a 'Fairian' and the governing market authority (which you can
think of as "the government"). From the bond buyer's (the lender)
perspective, bonds are guaranteed investments: regardless of the
issuer's (the borrower) ability to repay, the governing market will
create enough money to cover any shortfall and repay the full face
amount at maturity. 

*+note+*:: If a bond issuing 'Fairian' does not have sufficient cash on
hand to repay at bond maturity, then a +note+ is written listing the
borrower as a debtor, and that +note+ is then factored (offered for sale
at discount) and listed in the +note+ relation.

*+land+*:: The +land+ relation lists all the plots of land which have
been surveyed (note that "surveyed" is merely a notional term in this
context meaning only "created by the game") and offered for sale, as
well as listing the owner, if the land has been purchased.

*+work+*:: Lastly, the +work+ relation, similar to the +bond+ relation,
lists labor contracts between 'Fairians'. Labor contracts specify that
one 'Fairian' will work for another for at least a specified amount of
time. Entries in the +work+ relation are created when buyers, offering
to hire, and sellers, offering to work, offer mutually compatible
terms (with respect to  time, skill, proficieny, and payment).



